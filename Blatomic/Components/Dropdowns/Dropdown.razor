<div tabindex="0" 
     class="b-relative b-cursor-pointer"
     @onclick="(() => BoundIsOpen = !BoundIsOpen)">
        @ChildContent
    <div class="b-absolute @Position.AbsoluteStyle() @display"
         @onfocusout="(() => BoundIsOpen = false)">
        @DropdownContent
    </div>
</div>

@code {
    [Parameter] public Position Position { get; set; } = Position.Bottom;
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public RenderFragment? DropdownContent { get; set; }

    [Parameter] public bool IsOpen { get; set; } = false;
    [Parameter] public EventCallback<bool> IsOpenChanged { get; set; }
    
    private bool BoundIsOpen
    {
        get => IsOpen;
        set
        {
            IsOpen = value;
            IsOpenChanged.InvokeAsync(value);
        }
    }
    private string display => BoundIsOpen ? "b-visible" : "b-hidden";
}
