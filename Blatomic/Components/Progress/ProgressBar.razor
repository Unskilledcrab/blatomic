@inject ITheme Theme

<div class="w-full h-fit bg-gray-200 rounded-full">
    <div class="transition-[width] @Size.GetStyle() flex justify-center items-center rounded-full @Colors" style="width: @width">
        @if (percentage != 0)
        {
            @ChildContent
        }
    </div>
</div>

@code {
    private string width => $"{percentage}%";
    private double percentage = 0;
    [Parameter]
    public double Percentage
    {
        get => percentage;
        set
        {
            if (value < 0)
            {
                percentage = 0;
                PercentageChanged.InvokeAsync(percentage);
            }
            if (value > 100)
            {
                percentage = 100;
                PercentageChanged.InvokeAsync(percentage);
            }
            else
            {
                percentage = value;
            }
        }
    }    
    [Parameter]
    public EventCallback<double> PercentageChanged { get; set; }

    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public string Colors { get; set; } = string.Empty;
    [Parameter] public ProgressBarSize Size { get; set; } = ProgressBarSize.Medium;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (Colors == string.Empty)
        {
            Colors = Theme.Primary.All;
        }
    }
}
