name: CD

on:
  push:
    branches:    
      - 'releases/**'      
    tags:
      - 1.*

jobs:
  CD:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    steps:
    # uses GitHub's checkout action to checkout code form the master branch
    - uses: actions/checkout@v2
    
    # sets up .NET Core SDK 3.1
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.9.0
      with:
        dotnet-version: 6.0.101
            
    - name: Set Variables
      id: branch_name
      run: |
        echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
        echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
        echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
        
    - name: Show Release Version
      run: |        
        echo ${{ steps.branch_name.outputs.SOURCE_NAME }}
        echo ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
        echo ${{ steps.branch_name.outputs.SOURCE_TAG }}

    # Build the project
    - name: Build Project
      run: dotnet build ./Blatomic.WASM/Blatomic.WASM.csproj -c Release
    
    # publishes Blazor project to the release-folder
    - name: Publish .NET Core Project
      run: dotnet publish ./Blatomic.WASM/Blatomic.WASM.csproj -c Release -o release
    
    - name: Pack for nuget
      if: contains(${{ env.RELEASE_VERSION }},'.')
      run: dotnet pack ./Blatomic/Blatomic.csproj -c Release -p:PackageVersion=${{ steps.branch_name.outputs.SOURCE_TAG }}

    - name: Push to nuget
      if: contains(${{ env.RELEASE_VERSION }},'.')
      run: dotnet nuget push ./Blatomic/bin/Release/Blatomic.${{ steps.branch_name.outputs.SOURCE_TAG }}.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

    # changes the base-tag in index.html from '/' to 'BlazorGitHubPagesDemo' to match GitHub Pages repository subdirectory
    - name: Change base-tag in index.html from / to blatomic
      run: sed -i 's/<base href="\/" \/>/<base href="\/blatomic\/" \/>/g' release/wwwroot/index.html
    
    # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
    - name: Add .nojekyll file
      run: touch release/wwwroot/.nojekyll
    
    # publish to github pages
    - name: Commit wwwroot to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: release/wwwroot
