@page "/progressbars"
@inject ITheme Theme

<PageTitle>Progress Bars</PageTitle>

<div class="leading-relaxed @TwColors.Text_Slate_600">
    <h1 class="text-2xl font-bold @TwColors.Text_Slate_900">Progress Bars</h1>

    <h3 class="text-xl font-bold mt-6 @TwColors.Text_Slate_900">What are they?</h3>

    <p class="my-2 font-medium">
        Progress bars are by default styled with the primary theme and only have a min height placed on them. 
        They also have default animations that will all them to smoothly animate to the value placed.
    </p>

    <div class="mb-2">
        <ProgressBar Percentage="50" />
    </div>

    <CodeBlock Title=".razor" Code="@firstExample" />

    
    <p class="my-2">
        As you can see there is not whole lot that is needed to get started. So lets take a look at a more advanced example
    </p>

    <h3 class="text-xl font-bold mt-12 @TwColors.Text_Slate_900">Utilizing</h3>
            
    <p class="my-2">
        Here we can manipulate the value of the progress bar and we are displaying that value to the user
    </p>

    <p class="my-2 max-w-lg mx-auto">
        <ProgressBar @bind-Percentage="@progress">@($"{progress}%")</ProgressBar>
        <div class="flex justify-around mt-2">
            <Button OnClickedAsync="(() => progress = 0)">0</Button>
            <Button OnClickedAsync="(() => progress -= 5)">- 5</Button>
            <Button OnClickedAsync="(() => progress += 5)">+ 5</Button>
            <Button OnClickedAsync="(() => progress = 100)">100</Button>
        </div>
    </p>
    
    <CodeBlock Title=".razor" Code="@secondExample" />
</div>

@code {
    private string firstExample = @"<ProgressBar Percentage=""50"" />";
    private string secondExample = @"<ProgressBar @bind-Percentage=""@progress"">@($""{progress}%"")</ProgressBar>
<div class=""flex justify-around mt-2"">
    <Button OnClickedAsync=""(() => progress = 0)"">0</Button>
    <Button OnClickedAsync=""(() => progress -= 5)"">- 5</Button>
    <Button OnClickedAsync=""(() => progress += 5)"">+ 5</Button>
    <Button OnClickedAsync=""(() => progress = 100)"">100</Button>
</div>

@code {
    private int progress = 50;
}";

    private int progress = 50;
}
