@page "/steppers"

@inject ITheme Theme

<PageTitle>Steppers</PageTitle>

<div class="leading-relaxed @TwColors.Text_Slate_600">
    <h1 class="text-2xl font-bold @TwColors.Text_Slate_900">Steppers</h1>

    <h3 class="text-xl font-bold mt-6 @TwColors.Text_Slate_900">What are they?</h3>

    <p class="my-2 font-medium">
        These are meant to guide your user through a set of steps to complete. They can give information to the user in a more palettale way
        or they can assure that certain processes happen in sequential order. The user can either use the <b>Next</b> or <b>Previous</b> buttons
        or they can click on the step number in the header to proceed directly to that step.
    </p>

    <div class="max-w-xl">
        <Stepper>
            <Step>
                <div class="p-4">This is an introduction to the stepper component</div>
            </Step>
            <Step>
                <div class="p-4">It is super easy to use, just checkout the code below to see how this was made!</div>
            </Step>
        </Stepper>
    </div>

    <div class="mt-2">
        <CodeBlock Title=".razor" Code="@firstExample" />
    </div>


    <h3 class="text-xl font-bold mt-6 @TwColors.Text_Slate_900">Customizing</h3>

    <p class="my-2 font-medium">
        Sometimes you may want to give the user more information than just the number of steps, You can easily add titles
        to each step to let them know where they are at. While we are at it, lets also add a restriction to make sure that they
        can't continue forward until they've agreed to our terms. They user will not be able to go to the 3rd (or any step after)
        if they have not agreed to the new terms first.
    </p>

    <div class="max-w-xl">
        <Stepper>
            <Step Title="Intro">
                <div class="p-4">This will show you how to make sure that your user has completed a task before moving on to the next step</div>
            </Step>
            <Step Title="Terms" IsStepComplete="@canProceed">
                <div class="p-4 space-y-2">
                    <p>We have updated our terms of service, do you accept our new policies?</p>
                    <NotificationContainer ShowNotification="@(!canProceed)">
                        <Button Palette="@Theme.Success"
                                OnClickedAsync="@(() => canProceed = true)">
                            I Agree
                        </Button>
                    </NotificationContainer>
                </div>
            </Step>
            <Step Title="Done">
                <div class="p-4">Thanks, you are now complete!</div>
            </Step>
        </Stepper>
    </div>

    <div class="mt-2">
        <CodeBlock Title=".razor" Code="@secondExample" />
    </div>
    
    <p class="my-2 font-medium">
        With just a few lines of code we have a fully functional stepper that allows you to quickly guide a user through their next steps
    </p>
</div>

@code {
    private string firstExample = @"<Stepper>
    <Step>
        <div class=""p-4"">This is an introduction to the stepper component</div>
    </Step>
    <Step>
        <div class=""p-4"">It is super easy to user, just checkout the code below to see how this was made!</div>
    </Step>
</Stepper>";

    private string secondExample = @"@inject ITheme Theme
<Stepper>
    <Step Title=""Intro"">
        <div class=""p-4"">This will show you how to make sure that your user has completed a task before moving on to the next step</div>
    </Step>
    <Step Title=""Terms"" IsStepComplete=""@canProceed"">
        <div class=""p-4"">
            <p>We have updated our terms of service, do you accept our new policies?</p>
            <NotificationContainer ShowNotification=""@(!canProceed)"">
                <Button Palette=""@Theme.Success""
                        OnClickedAsync=""@(() => canProceed = true)"">
                    I Agree
                </Button>
            </NotificationContainer>
        </div>
    </Step>
    <Step Title=""Done"">
        <div class=""p-4"">Thanks, you are now complete!</div>
    </Step>
</Stepper>

@code {
    private bool canProceed = false;
}";

    private bool canProceed = false;
}
