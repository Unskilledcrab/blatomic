@inherits LayoutComponentBase
@inject ITheme Theme
@inject ThemeService ThemeService
@inject NavigationManager Nav

@implements IDisposable

<PageTitle>Blatomic Examples</PageTitle>

<BlatomicWrapper>
    <div class="@Theme.Light.All fixed inset-0 overflow-y-auto">
        <main>
            @*Top bar*@
            <div class="sticky w-full top-0 z-10 @Theme.Primary.Background.ToString()">
                <div class="max-w-8xl mx-auto">
                    <div class="py-4 px-4 lg:px-8 border-b border-black dark:border-white">
                        <div class="flex justify-between items-center">
                            <div>
                                <a href="" class="text-xl flex items-center font-bold"><span class="inline-block mr-1">@Blatomic.Fragments.BlatomicIcon.LargeIcon</span> Blatomic</a>
                            </div>
                            <div>
                                <Button OnClickedAsync="ToggleDarkMode" Palette="@Theme.Light">
                                    @(ThemeService.IsDarkMode ? "Light" : "Dark")
                                </Button>
                                <a class="ml-2 font-bold" href="https://github.com/Unskilledcrab/blatomic" target="_blank">Github</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="lg:hidden max-w-8xl mx-auto">
                    <div class="py-2 px-3 lg:px-8">
                        <Button OnClickedAsync="ToggleNavMenu">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd" />
                            </svg>
                        </Button>
                    </div>
                </div>
                @if (showNav)
                {
                    <div class="@showNav lg:hidden">
                        <Backdrop OnBackdropClick="ToggleNavMenu" />
                        <div class="fixed z-20 top-0 bottom-0 px-16 py-8 @TwColors.Bg_White overflow-y-auto">
                            <div class="flex">
                                <NavMenu />
                                <div class="absolute top-6 right-2">
                                    <DismissButton OnClickAsync="ToggleNavMenu" />
                                </div>
                            </div>
                        </div>
                    </div>
                }

            </div>

            @*Main Body*@
            <div class="mt-4 pb-4">
                @*Side Nav*@
                <div class="max-w-8xl mx-auto px-4">
                    <div class="hidden lg:block fixed overflow-y-auto top-42 left-16">
                        <NavMenu />
                    </div>
                    <div class="md:px-16 lg:px-64 xl:pl-64 xl:pr-96">
                        @Body
                    </div>
                </div>

            </div>
        </main>
    </div>
</BlatomicWrapper>

@code {
    private string navClass => showNav ? "block" : "hidden";
    private bool showNav = false;

    protected override void OnInitialized()
    {
        Nav.LocationChanged += CloseNav;
        base.OnInitialized();
    }

    private void CloseNav(object? sender, LocationChangedEventArgs args)
    {
        showNav = false;
        StateHasChanged();
    }

    private void ToggleNavMenu()
    {
        showNav = !showNav;
    }
    private void ToggleDarkMode()
    {
        ThemeService.ToggleMode();
    }

    public void Dispose()
    {
        Nav.LocationChanged -= CloseNav;
    }
}
